nextState([1.0; -1.0; -1.0; 1.0], w);;
- : float list = [-1.; 1.; 1.; -1.]
nextState([-2.;-3.;4.;4.], w2);;
- : float list = [-1.; -1.; 1.; -1.]


updateN([1.;1.], [[0.;-1.]; [-1.; 0.]], 1);;
- : float list = [-1.; -1.]
updateN([1.0; -1.0; -1.0; 1.0],
        [[0.; 1.; -1.; -1.]; [1.; 0.; -3.; 1.]; [-1.; -3.; 0.; -1.]; [-1.; 1.; -1.; 0.]],
        1);;
- : float list = [-1.; 1.; 1.; -1.]


findsEquilibrium([1.0; -1.0; -1.0; 1.0],
                [[0.; -1.; 1.; -1.]; [-1.; 0.; -1.; 1.];
                [1.; -1.; 0.; -1.]; [-1.; 1.; -1.; 0.]],
                2);;
- : bool = false
findsEquilibrium([1.0; -1.0; 1.0; -1.0],
                  [[0.; -1.; 1.; -1.]; [-1.; 0.; -1.; 1.];
                  [1.; -1.; 0.; -1.]; [-1.; 1.; -1.; 0.]],
                  3);;
- : bool = true


energy([1.0; -1.0; -1.0; 1.0],
        [[0.; 1.; -1.; -1.]; [1.; 0.; -3.; 1.];
         [-1.; -3.; 0.; -1.]; [-1.; 1.; -1.; 0.]]);;
- : float = 4.
energy([1.;2.;16.;-12.],
      [[0.; -1.; 1.; -1.]; [-1.; 0.; -1.; 1.];
      [1.; -1.; 0.; -1.]; [-1.; 1.; -1.; 0.]]);;
- : float = -162


hopTrainAstate([9.;-8.;7.;-6.;5.])
- : float list list =
[[0.; -72.; 63.; -54.; 45.]; [-72.; 0.; -56.; 48.; -40.];
 [63.; -56.; 0.; -42.; 35.]; [-54.; 48.; -42.; 0.; -30.];
 [45.; -40.; 35.; -30.; 0.]]
hopTrainAstate([1.; -1.; -1.; 1.]);;
- : float list list =
[[0.; -1.; -1.; 1.]; [-1.; 0.; 1.; -1.]; [-1.; 1.; 0.; -1.];
 [1.; -1.; -1.; 0.]]


hopTrain([[1.]; [2.]]);;
- : float list list = [[0.]]
hopTrain([[1.0; -1.0; 5.0; -1.0]; [1.0; -1.0; -1.0; 2.0]; [-1.0; -1.0; 1.0; 1.0]]);;
- : float list list =
[[0.; -1.; 3.; 0.]; [-1.; 0.; -5.; -2.]; [3.; -5.; 0.; -6.];
 [0.; -2.; -6.; 0.]]
